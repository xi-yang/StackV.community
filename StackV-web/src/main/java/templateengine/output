<serviceDelta>
<uuid>6ad3ed78-7ede-45c2-a3aa-3c7b709e63e7</uuid>
<workerClassPath>net.maxgigapop.mrs.service.orchestrate.SimpleWorker</workerClassPath>

<modelAddition>

@prefix rdfs:  &lt;http://www.w3.org/2000/01/rdf-schema#&gt; .
@prefix owl:   &lt;http://www.w3.org/2002/07/owl#&gt; .
@prefix xsd:   &lt;http://www.w3.org/2001/XMLSchema#&gt; .
@prefix rdf:   &lt;http://schemas.ogf.org/nml/2013/03/base#&gt; .
@prefix nml:   &lt;http://schemas.ogf.org/nml/2013/03/base#&gt; .
@prefix mrs:   &lt;http://schemas.ogf.org/mrs/2013/12/topology#&gt; .
@prefix spa:   &lt;http://schemas.ogf.org/mrs/2015/02/spa#&gt; .

&lt;x-policy-annotation:data:vpc-criteria&gt;
    a            spa:PolicyData ;
    spa:type     "JSON" ;
    spa:value    """{"parent":"urn:ogf:network:sdn.maxgigapop.net:network","routes":[{"nextHop":"internet","to":"0.0.0.0/0"}],"gateways":[{"type":"internet"},{"type":"vpn"}],"cidr":"10.0.0.0/16","subnets":[{"routes":[{"nextHop":"vpn","from":"vpn","to":"0.0.0.0/0"},{"nextHop":"internet","to":"0.0.0.0/0"}],"name":"Subnet_1","cidr":"10.0.0.0/24"}],"type":"internal"}""".

&lt;urn:ogf:network:service+6ad3ed78-7ede-45c2-a3aa-3c7b709e63e7:resource+virtual_clouds:tag+vpc1&gt;
    a                         nml:Topology ;

    
    spa:dependOn &lt;x-policy-annotation:action:create-vpc&gt;, &lt;x-policy-annotation:action:create-mce_dc1&gt; .

&lt;urn:ogf:network:vo1_maxgigapop_net:link=conn1&gt;
    a            mrs:SwitchingSubnet;
    spa:type     spa:Abstraction;
    spa:dependOn &lt;x-policy-annotation:action:create-path&gt;.

&lt;x-policy-annotation:action:create-path&gt;
    a            spa:PolicyAction ;
    spa:type     "MCE_MPVlanConnection" ;
    spa:importFrom &lt;x-policy-annotation:data:conn-criteria1&gt; ;
    spa:exportTo &lt;x-policy-annotation:data:conn-export&gt; .

&lt;x-policy-annotation:action:create-mce_dc1&gt;
    a            spa:PolicyAction ;
    spa:type     "MCE_AwsDxStitching" ;
    spa:importFrom &lt;x-policy-annotation:data:vpc-export&gt;, &lt;x-policy-annotation:data:conn-export&gt; ;
    spa:dependOn &lt;x-policy-annotation:action:create-vpc&gt;, &lt;x-policy-annotation:action:create-path&gt;.

&lt;x-policy-annotation:data:vpc-export&gt;
    a            spa:PolicyData ;
    spa:type     "JSON" ;
    spa:format   """parent=../parent stitch_from="%%$.gateways[?(@.type=='vpn-gateway')].uri%%"""".

&lt;x-policy-annotation:data:conn-export&gt;
    a            spa:PolicyData;
    spa:type     "JSON" ;
    spa:format   """{
        "to_l2path": %%$.urn:ogf:network:vo1_maxgigapop_net:link=conn1%%
    }""" .

&lt;x-policy-annotation:data:conn-criteria1&gt;
    a            spa:PolicyData;
    spa:type     "JSON";
    spa:value    """{
        "urn:ogf:network:vo1_maxgigapop_net:link=conn1": {
            "testTo": {
                "vlan_tag":"any"
            },
            "urn:ogf:network:sdn.maxgigapop.net:network": {
                "vlan_tag":"any"
            }
        }
    }""".
            


 
    
        
            &lt;urn:ogf:network:service+6ad3ed78-7ede-45c2-a3aa-3c7b709e63e7:resource+virtual_machines:tag+VM_1&gt;
                a           nml:Node ;
                nml:name    "VM_1";
                nml:hasBidirectionalPort   &lt;urn:ogf:network:service+6ad3ed78-7ede-45c2-a3aa-3c7b709e63e7:resource+virtual_machines:tag+VM_1:eth0&gt;;
                spa:dependOn &lt;x-policy-annotation:action:create-VM_1&gt; .

            &lt;urn:ogf:network:service+6ad3ed78-7ede-45c2-a3aa-3c7b709e63e7:resource+virtual_machines:tag+VM_1:eth0&gt;
                a           nml:BidirectionalPort;
                spa:dependOn &lt;x-policy-annotation:action:create-VM_1&gt;
             .



            &lt;x-policy-annotation:action:create-VM_1&gt;
                a            spa:PolicyAction ;
                spa:type     "MCE_VMFilterPlacement" ;
                spa:dependOn &lt;x-policy-annotation:action:create-vpc&gt; ;
                spa:importFrom  &lt;x-policy-annotation:data:vpc-subnet-VM_1-criteria&gt;.

            &lt;x-policy-annotation:data:vpc-subnet-VM_1-criteria&gt;
                a           spa:PolicyData;
                spa:type    "JSON";
                spa:format  """{
                    "place_into": "%%$.subnets[1].uri%%"}""" .
        
    




&lt;x-policy-annotation:action:create-vpc&gt;
    a           spa:PolicyAction ;
    spa:type     "MCE_VirtualNetworkCreation" ;
    spa:importFrom &lt;x-policy-annotation:data:vpc-criteria&gt;


    
;
    spa:exportTo &lt;x-policy-annotation:data:vpc-export&gt;,
        
&lt;x-policy-annotation:data:vpc-subnet-VM_1-criteria&gt;,
        .
    
    


</modelAddition>

</serviceDelta>